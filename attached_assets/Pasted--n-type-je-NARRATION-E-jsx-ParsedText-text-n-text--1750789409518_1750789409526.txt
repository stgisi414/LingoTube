}), n.type === je.NARRATION && E.jsx(ParsedText, {
                    text: n.text
                }), n.type === je.VIDEO && ( () => {
                    let B = C.youtubeVideoId || null;
                    return !B && (g == null ? void 0 : g.status) === "success" && g.id && (B = g.id),
                    E.jsxs(E.Fragment, {
                        children: [E.jsx("p", {
                            className: "text-sm text-slate-400 mb-3 italic",
                            children: C.segmentDescription
                        }), B ? E.jsx(_g, {
                            videoId: B,
                            startSeconds: b,
                            endSeconds: k,
                            height: o || "360"
                        }) : (g == null ? void 0 : g.status) === "loadingId" || (g == null ? void 0 : g.status) === "loadingDetails" ? E.jsx("div", {
                            className: "p-4 bg-slate-700/50 rounded-md border border-slate-600 text-slate-300 text-center",
                            children: E.jsx("div", {
                                className: "animate-pulse",
                                children: (g == null ? void 0 : g.status) === "loadingId" ? `Searching for video: "${C.youtubeSearchQuery}"...` : "Fetching video details..."
                            })
                        }) : E.jsxs("div", {
                            className: "p-4 bg-slate-700/50 rounded-md border border-slate-600",
                            children: [E.jsx("p", {
                                className: `mb-2 ${(g == null ? void 0 : g.status) === "error" ? "text-red-400" : "text-slate-300"}`,
                                children: (g == null ? void 0 : g.status) === "error" ? g.message || "Could not find or load video." : "No specific video provided by AI or found via search."
                            }), C.youtubeSearchQuery && (!B || (g == null ? void 0 : g.status) === "error") && E.jsxs(E.Fragment, {
                                children: [E.jsx("p", {
                                    className: "text-slate-300 mb-2",
                                    children: "You can try searching on YouTube:"
                                }), E.jsxs("a", {
                                    href: `https://www.youtube.com/results?search_query=${encodeURIComponent(C.youtubeSearchQuery)}`,
                                    target: "_blank",
                                    rel: "noopener noreferrer",
                                    className: "inline-flex items-center px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-md transition-colors font-medium",
                                    children: ['Search: "', C.youtubeSearchQuery, '" ', E.jsx("span", {
                                        className: "ml-1.5",
                                        children: w0
                                    })]
                                })]
                            })]
                        })]
                    })
                }